<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdGuardarAlarma.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        R0lGODlhSAAUAIYAAIp8RZF7N8KuYfLr1b2tcrCVQ4JuMZR9ONHCi7eobPPt2M67dZSFStjJjaeOP4Zx
        M9bLoKuOPqaWXsq8hrOcTqGJPdPJnpuNWHJhLKGIPcy7e4x3NaWMPs7EmrSaRoJyOcWxY9jOor6mU7Wj
        W87Aid3Spubcu8GydbuufJ+GPLKYRLWZRKqaYKySQayaVntoL4NfEsCzgNvQpNHAf35rMNDGm5qDOqmb
        Zn1tNsa5hKuSQ93TpXhmLrujUq6eY8WwZnRmM6GLQ45/SK+UQraaRe/pz7acR+HWqNPCgNnKkLidSLKZ
        RqyRQbOaRq6TQaOKPenfveLXqufdvOnt7dvQo82/iODVp6SLPpZ/OrmqcN/UqKeYX+3mxod2PZyEO6+h
        auPZuOTauX9ZEODVqenguXprNXRMAaWRSMe9lNXHjrypXn9zQLGldauVS6GQUXxwP7WbR6CSXruscca2
        eMi1ccKwbnhRBPTt166QQOPYq+rgvoplEevjxsWvX7ebRf///yH/C05FVFNDQVBFMi4wAwEBAAAh+QQA
        AAAAACwAAAAASAAUAAAI/wCnwMBDsCCeCAQjIDx4cOFChg4LIlSY0CDDihQnRtwoZoqYH3xCihxJsqTJ
        kyhTqgz5Q4wdMndiypxJs6bNmzEHKBjAk6cCnEBlkrFjR4Geo0iTIoUCRYqJpyakMFVKdanTMGDAhIkK
        papXqgqIFslDtqxZslHGlJARoq2MElrGRDlLF60WthAghJChZW7dv2eLiD1CuLDhI1Z2UIFgoYPjGhZC
        UKFSYofly5gtL67x5w+aDjUgUMlsWYsVK4dTC7ZTJInr17BdIyCRo3PnGDkm6CbBG8Fs3ryrCJ8QA0Vn
        NihwTwDeG0GaNEkaxI69ugiS69izI5mh4UTnG+D/JP/IQp6A+RPozauXQyDLlxud49z4kkC9+hNzNGiY
        MUO79uoLBCjggAHWkUBnFyQYhwSdMfgHCz7YxsIWnVHoYGdCXCAhhX9EmEAddBAo4gLVgWDiiSiCIMAI
        LnQGgBAwMoBhZwzUKOMfQth24xqdvQHAizN25oYLI6ghQIpIVifCkkw2KUIPFJzR2Qe2ddEZDlNaaVsZ
        V1L5BxCdAcHllp11wUAQbVDQg5NsVqfEm3DGqYQHOjzRGQ003NkZBp3x0NkLe/aZ5x98EtpnoH8YEEAK
        DhQAhxFyylkdEZRWaikRKjDxhA223TmooJ0W+oIBBnTKA6C2FfrAoo2usMKll1b/58estNbqxwoFOJAB
        Fhts8MCvv5JKarAG4GnAr70CO+wDpBr7wAY2XMGECkTYaq2s1taKqRO62oDFAeB+GwC4B2Dx7QEBjFuu
        DV6Ye6654KZbrhfSFrBCtrZii68fRKygwhAOcPBEBgRXUDDBTxicQQopVPAEBw4E/MTAGSRMMMMVXOFA
        CwVQuy+t+u7brwoFONECEyi3cPLJTKiMcspOOFFAySanzDLMQ6jgarUf+7EaF0YELfTQQsMBhwdNLKGC
        Cks07fTTSjPdRBMeIJ001FEvMbXRjxLttRFcENVAH2SXbfbZaKet9tpst012A3ZMYcYedNdt99145633
        3nz3Bk23GVMEBAA7
</value>
  </data>
</root>